defmodule Euler do
  use Application
  alias Math, as: M

  def start(_type, _args) do
    eul1
    eul2
    eul3
    eul7
    Supervisor.start_link [], strategy: :one_for_one
  end

  def eul1 do
    IO.write "eul1: "
    """
    If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
    Find the sum of all the multiples of 3 or 5 below 1000.
    """
    rem3or5? = &(rem(&1, 3) == 0 or rem(&1, 5) ==0)
    1..999 |>
    #Enum.map(&(&1)) |>
    Enum.filter(rem3or5?) |>
    #Enum.join(" ") |>
    Enum.sum |>
    IO.puts
  end

  def eul2 do
    IO.write "eul2: "
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    """

    IO.puts M.fib(1,1,10)
  end

  def eul3 do
    IO.write "eul3: "
    """
    The prime factors of 13195 are 5, 7, 13 and 29.
    What is the largest prime factor of the number 600851475143 ?
    """
    #M.prime_factors_slow_print(600851475143)
    IO.puts M.max_prime_factors(600851475143)
  end

  def eul7 do
    IO.write "eul7: "
    """
    By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.
    What is the 10 001st prime number?
    """
    IO.puts M.prime_seq(10001)
  end
end
